module pipeline_cpu(input clk, input reset, input [3:0] a, b, output [7:0] result);

    reg [3:0] stage1_a, stage1_b;
    reg [7:0] stage2_sum;
    reg [7:0] stage3_result;

    always @(posedge clk or posedge reset) begin
        if (reset) begin
            stage1_a <= 0;
            stage1_b <= 0;
            stage2_sum <= 0;
            stage3_result <= 0;
        end else begin
            // Stage 1: Fetch operands
            stage1_a <= a;
            stage1_b <= b;

            // Stage 2: Add
            stage2_sum <= stage1_a + stage1_b;

            // Stage 3: Store result
            stage3_result <= stage2_sum;
        end
    end

    assign result = stage3_result;

endmodule
