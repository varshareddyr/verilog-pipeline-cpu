// pipeline.v
module pipeline (
    input logic clk,
    input logic reset,
    input logic [3:0] a,
    input logic [3:0] b,
    output logic [7:0] result
);

    // Stage 1: Latch inputs
    logic [3:0] stage1_a, stage1_b;

    // Stage 2: Perform addition
    logic [7:0] stage2_sum;

    // Stage 3: Hold result
    logic [7:0] stage3_result;

    always_ff @(posedge clk or posedge reset) begin
        if (reset) begin
            stage1_a <= 0;
            stage1_b <= 0;
            stage2_sum <= 0;
            stage3_result <= 0;
        end else begin
            // Stage 1
            stage1_a <= a;
            stage1_b <= b;

            // Stage 2
            stage2_sum <= stage1_a + stage1_b;

            // Stage 3
            stage3_result <= stage2_sum;
        end
    end

    assign result = stage3_result;

endmodule
